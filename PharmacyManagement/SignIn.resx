<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtPass.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAAlCAYAAABh/Q28AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGASURBVHhe7d2xalNhGMfhjo5ejqOjN+LoBbh5Hd6Ad+F7
        zvcdTa1SItKWlppaMVgNWhHp0iHyOQRygongOz5/eIbAe9YfSZazt2dmlr2IuFdreV5KWXRdtwQYa31o
        nYiIB+OG/Fnf94/3Jy+uL94fL6/m58vvXz8AbGh9aJ14fTC5Hob6bC0kEXH/1f7L6/FDANtMDw9+RMTD
        VUyGUiaXs5ONQ4Bt5h/PlrWW2SomfdfdLD7PNg4Bdmn/o6xi0j6MDwD+hZgAKcQESCEmQAoxAVKICZBC
        TIAUYgKkEBMghZgAKcQESCEmQAoxAVKICZBCTIAUYgKkEBMghZgAKcQESCEmQAoxAVKICZBCTIAUYgKk
        EBMgxVpM+q67/fblYuMIYJe1mNRSTj5dnm4cAWxzNT9fllIWq5hExKPp9M3P8SHANqfHb29r7Z+uYtI2
        lDI5enf4ywvMgV1aJ1pIhqGeRcSdtZi01do/6bvupv0GAvib1on2jSQi7o47Ymb2X/sNe5lhn3505UsA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="txtUsername.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAAlCAYAAABh/Q28AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGASURBVHhe7d2xalNhGMfhjo5ejqOjN+LoBbh5Hd6Ad+F7
        zvcdTa1SItKWlppaMVgNWhHp0iHyOQRygongOz5/eIbAe9YfSZazt2dmlr2IuFdreV5KWXRdtwQYa31o
        nYiIB+OG/Fnf94/3Jy+uL94fL6/m58vvXz8AbGh9aJ14fTC5Hob6bC0kEXH/1f7L6/FDANtMDw9+RMTD
        VUyGUiaXs5ONQ4Bt5h/PlrWW2SomfdfdLD7PNg4Bdmn/o6xi0j6MDwD+hZgAKcQESCEmQAoxAVKICZBC
        TIAUYgKkEBMghZgAKcQESCEmQAoxAVKICZBCTIAUYgKkEBMghZgAKcQESCEmQAoxAVKICZBCTIAUYgKk
        EBMgxVpM+q67/fblYuMIYJe1mNRSTj5dnm4cAWxzNT9fllIWq5hExKPp9M3P8SHANqfHb29r7Z+uYtI2
        lDI5enf4ywvMgV1aJ1pIhqGeRcSdtZi01do/6bvupv0GAvib1on2jSQi7o47Ymb2X/sNe5lhn3505UsA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="btnSignIn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARMAAAAoCAYAAADdYx5iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIbSURBVHhe7d2/axRBFMDxLS1T2mlnfC+w7JsIdrEUb17O
        MqWN/4WFf4Ag+G8IdgErwcrSwl5IkcZwmEOJcCkib/HEzHrnrUx334FPs7+uui+3M3DTNCvGwcGtG/sT
        PTKXY3P9aK5nyfUKwPaI733//c9778zlSTttd8pWrB2dy8OUdda5zFMefgCALZT1W8r61SbytGzGYER1
        kuubuGHwIAAIWc5T1g/3HsnNsiH9iJCY60nnshjcDACF6EU7vXO7bEkTv0gICYAxYj7lWkh+zZHwagNg
        FHP5nlyf9yGJVZuYbC0vAoBNmOss5b3dJpZ7+lnav1wEAP/SuVx2WV42sX5cngSAMexQPjcpy2l5AgDG
        MNfLxrJclCcAYKxYEh4cBICxiAmAKogJgCqICYAqiAmAKogJgCqICYAqiAmAKogJgCqICYAqiAmAKogJ
        gCqICYAqiAmAKogJgCqICYAqiAmAKogJgCqa+O/G8iAAjBUxOSsPAsBYTWxAXB4EgFGynEZMnqUsPwYn
        AWBD5vq6iV3MUxb2GQbwv85Tvvu432/Ysr4wZ4tQAON0WRedy9s+JMvNy83lU3khAKwnX9ppu/M7JjFi
        F3M7ZGUHwGbMdZYm+uBaSJbDfPe+uZ4YE7IAVuiyLOIXycqQLEf/ypP1lTmTsgD+kPWqc5lb1veDV5t1
        I6oTyz3mOh88FMBWsSwX5nK8P9GjshXL8RMMlu5CaUz2LAAAAABJRU5ErkJggg==
</value>
  </data>
</root>